spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:overgame_db}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:mysecretpassword}
  flyway:
    baselineOnMigrate: true
    enabled: true
    schemas: public
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        order_inserts: true
        jdbc:
          batch_size: 50
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_SET_URI:http://localhost:8090/auth/realms/overgame/protocol/openid-connect/certs}
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  mail:
    host: smtp.yandex.ru
    username: noreply@ailytun.com
    password: eybmmjcubfchmrha
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 10000
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 587
          starttls:
            enable: true
            required: true
          timeout: 10000
          writetimeout: 10000
          setTLS: true
        protocol: smtps
        debug: true
  cloud:
    compatibility-verifier:
      enabled: false

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  main:
    allow-circular-references: true

keycloak:
  value: keycloak
  auth-server-url: ${AUTH_SERVER_URL:https://overgame.kz/auth}
  reset-password-url: ${RESET_PASSWORD_URL:http://localhost:8090/auth/admin/realms/%s/users/%s/reset-password}
  bearer-only: true
  realm: ${REALM:master}
  client-id: ${CLIENT_ID:overgame-client}
  client-secret: ${CLIENT_SECRET:0rf43YiiKtZ8uRTb7v4E9WWfu4bjmWOQ}
  username: ${REALM_USERNAME:overgame_admin}
  password: ${REALM_USER_PASSWORD:admin}

amazon:
  key:
    access: 'AKIAZLRPS7UGH2MW7PJA'
    secret: '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'
  s3:
    bucket:
      name: 'overgame'
      url: 'https://overgame.s3.us-west-2.amazonaws.com/'